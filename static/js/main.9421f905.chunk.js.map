{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","handleCurrencyChange","handleInputChange","amount","type","className","value","onChange","map","option","key","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountFromCurrency","setAmountFromCurrency","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAEe,SAASA,EAAYC,GAAQ,IAExCC,EAKED,EALFC,gBACAC,EAIEF,EAJFE,iBACAC,EAGEH,EAHFG,qBACAC,EAEEJ,EAFFI,kBACAC,EACEL,EADFK,OAEF,OACE,6BACE,2BAAOC,KAAK,SAASC,UAAU,WAAWC,MAAOH,EAAQI,SAAUL,IACnE,4BAAQG,UAAU,iBAAiBC,MAAON,EAAkBO,SAAUN,GACnEF,EAAgBS,KAAI,SAAAC,GAAM,OACzB,4BAAQC,IAAKD,EAAQH,MAAOG,GAASA,QCX/C,IAAME,EAAW,yCAwEFC,MAtEf,WAAgB,IASVC,EAAUC,EATD,EAEiCC,mBAAS,IAF1C,mBAENhB,EAFM,KAEWiB,EAFX,OAG2BD,qBAH3B,mBAGNE,EAHM,KAGQC,EAHR,OAIuBH,qBAJvB,mBAINI,EAJM,KAIMC,EAJN,OAK2BL,qBAL3B,mBAKNM,EALM,KAKQC,EALR,OAMeP,mBAAS,GANxB,mBAMNZ,EANM,KAMEoB,EANF,OAOuCR,oBAAS,GAPhD,mBAONS,EAPM,KAOcC,EAPd,KAgDb,OArCGD,GACDV,EAAaX,EACbU,EAAWV,EAASkB,IAEpBR,EAAWV,EACXW,EAAaX,EAASkB,GAYxBK,qBAAU,WACRC,MAAMhB,GACHiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgBa,EAAKK,MACrBhB,EAAcY,GACdV,EAAgBS,EAAKI,MAAMH,SAE9B,IAEHN,qBAAU,WACW,MAAhBT,GAAsC,MAAdE,GACzBQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IACjDS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIT,EAAgBS,EAAKI,MAAMhB,SAE1C,CAACF,EAAcE,IAGhB,yBAAKd,UAAU,OACb,kDACA,kBAACR,EAAD,CACEE,gBAAiBA,EACjBC,iBAAkBiB,EAClBhB,qBAAsB,SAAAoC,GAAC,OAAInB,EAAgBmB,EAAEC,OAAOhC,QACpDJ,kBApCN,SAAgCmC,GAC9Bd,EAAUc,EAAEC,OAAOhC,OACnBmB,GAAsB,IAmClBtB,OAAQW,IAEV,oCACA,kBAACjB,EAAD,CACEE,gBAAiBA,EACjBC,iBAAkBmB,EAClBlB,qBAAsB,SAAAoC,GAAC,OAAIjB,EAAciB,EAAEC,OAAOhC,QAClDJ,kBAxCN,SAA8BmC,GAC5Bd,EAAUc,EAAEC,OAAOhC,OACnBmB,GAAsB,IAuClBtB,OAAQU,MCjEhB0B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.9421f905.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function CurrencyRow(props) {\n  const {\n    currencyOptions, \n    selectedCurrency, \n    handleCurrencyChange,\n    handleInputChange,\n    amount\n  } = props\n  return (\n    <div>\n      <input type=\"number\" className=\"inputBox\" value={amount} onChange={handleInputChange}></input>\n      <select className=\"currencySelect\" value={selectedCurrency} onChange={handleCurrencyChange}>\n        {currencyOptions.map(option => (\n          <option key={option} value={option}>{option}</option>\n        ))}\n      </select>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport CurrencyRow from './CurrencyRow'\n\nconst BASE_URL = \"https://api.exchangeratesapi.io/latest\"\n\nfunction App() {\n\n  const [currencyOptions, setCurrencyOptions] = useState([])\n  const [fromCurrency, setFromCurrency] = useState()\n  const [toCurrency, setToCurrency] = useState()\n  const [exchangeRate, setExchangeRate] = useState()\n  const [amount, setAmount] = useState(1)\n  const [amountFromCurrency, setAmountFromCurrency] = useState(true)\n\n  let toAmount, fromAmount\n\n  if(amountFromCurrency) {\n    fromAmount = amount\n    toAmount = amount * exchangeRate\n  } else {\n    toAmount = amount\n    fromAmount = amount / exchangeRate\n  }\n\n  function handleAmountFromChange(e) {\n    setAmount(e.target.value)\n    setAmountFromCurrency(true)\n  }\n  function handleAmountToChange(e) {\n    setAmount(e.target.value)\n    setAmountFromCurrency(false)\n  }\n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then(res => res.json())\n      .then(data => {\n        const firstCurrency = Object.keys(data.rates)[0]\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)])\n        setFromCurrency(data.base)\n        setToCurrency(firstCurrency)\n        setExchangeRate(data.rates[firstCurrency])\n      })\n  }, [])\n\n  useEffect(() => {\n    if(fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n      .then(res => res.json())\n      .then(data => setExchangeRate(data.rates[toCurrency]))\n    }\n  }, [fromCurrency, toCurrency])\n\n  return (\n    <div className=\"App\">\n      <h1>Currency Converter</h1>\n      <CurrencyRow \n        currencyOptions={currencyOptions}\n        selectedCurrency={fromCurrency}\n        handleCurrencyChange={e => setFromCurrency(e.target.value)}\n        handleInputChange={handleAmountFromChange}\n        amount={fromAmount}>\n      </CurrencyRow>\n      <div> = </div>\n      <CurrencyRow \n        currencyOptions={currencyOptions}\n        selectedCurrency={toCurrency}\n        handleCurrencyChange={e => setToCurrency(e.target.value)}\n        handleInputChange={handleAmountToChange}\n        amount={toAmount}>\n      </CurrencyRow>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}